FORMAT: 1A
HOST: https://publicapi.giffgaff.com

# giffgaff Public API Documentation
Publicly accessible endpoints to interact with your giffgaff account. From the mobile network run by you.

# General Consideration
The API will provide an HTTP interface which will follow the REST conventions.
The API will always accept and return ONLY JSON data formats.

## Data format

- **Dates** will be encoded as strings with **ISO-8601** format. e.g. `2012-10-19T17:05:34.022+0000`.
- **Phone numbers** will be strings with international format. e.g. +447000000001.
- **Balance** and **Money related values** will be **integers** expressed as *cents/pennies*. e.g `Â£10.72` will be expressed as `1072`.
Status codes

## Typical Status codes

Every response will provide an HTTP Header containing the response status code. As a rule of thumb, the following codes will always apply:

| HTTP Status Code          | Description           |
| ---------                 | ----------------      |
| 200 (Response OK)         | Valid Response        |
| 400 (Bad Request)         | The request could not be understood or was missing required parameters
| 401 (Forbidden)           | Authentication failed or user does not have permissions for the requested operation
| 500 (Server error)        | We messed up
|||


# Group API Status

This API provides a way for client to periodically check the status of the connection by sending a small heartbeat message.

## Heartbeat [/giffgaff-api/heartbeat]

### GET

Checks if the API and its internal components are up and running
 
+ Response 200 (application/json)

        { "alive" : true }


# Group Authentication

##Overview

All API requests must be authenticated with an access token that is placed in the Authorization HTTP request header (see below).

###Oauth overview

#### Access Token
The authenticated flow starts with an access token being requested using the username and password as access credentials.

#### Refresh Token
Access tokens have a fixed lifespan, so they must be periodically refreshed.

## Authorisation [/giffgaff-api/oauth/token{?client_id,client_secret,grant_type,scope,username,password,refresh_token}]

### requestAccessToken [POST]

+ Parameters
    + client_id (string) ... a 
    + client_secret (string) ... a
    + grant_type (string) ... a
    + scope (string) ... a
    + username (string) ... a
    + password (string) ... a

+ Response 200 (application/json)

        { "access_token"  : "77effd7f-f73c-4bb5-a4bf-f3fc8cb5c80d", "token_type" : "bearer", "refresh_token" : "66d31440-089e-49c9-a699-227c79e75f53",  "expires_in"    : 121212, "scope" : "read" }
    
### refreshAccessToken [GET]

+ Parameters
    + client_id ( string ) ...description
    + client_secret ( string ) ... a
    + grant_type (string) ... 
    + scope ( string ) ... _always_ `"read"`
    + refresh_token
    
+ Response 200 (application/json)

        { "access_token"  : "77effd7f-f73c-4bb5-a4bf-f3fc8cb5c80d", "token_type" : "bearer", "refresh_token" : "66d31440-089e-49c9-a699-227c79e75f53",  "expires_in"    : 121212, "scope" : "read" }


# Group Members

Returns the complete member model object

## Profile [/giffgaff-api/profile.json]


+ Model (application/json)

    JSON representation of Member Resource.

    + Body

            {
             "username":"usersim3",
              "phone_number":"+447700000007",
              "role":"ROLE_SIM",
              "balance":700,
              "free_calls_expiration":"2012-10-20T13:45:18.763+0000",
              "affiliate":false,
              "auto_topup":false,
              "adult_content":false,
              "phone_notifications":false,
             "gigabag_notification":false,
             "recurring_goodybag":false,
              "current_goodybag":{
                "goodybag":"Cool Goodybag",
                "price":0,
                "start_date":"2012-08-21T23:00:00.000+0000",
                "end_date":"2012-09-19T23:00:00.000+0000",
                "voice_left":99,
                "text_left":499,
                "data_left":999,
                "bb_addon":false,
                "voice_max":  250,
                "text_max":   -1,
                "data_max":   -1
              },
              "queued_goodybag":null,
              "payback_points":null
            }

### Retrieve a Member Profile [GET]

+ Request (application/json)
    
    + Headers
        
            Authorization: Bearer 77effd7f-f73c-4bb5-a4bf-f3fc8cb5c80d

+ Response 200
    
    [Profile][]

        
#Group Buying

## Product List [/giffgaff-api/products]

### get list of products [GET]

Returns a list of all the products available to the current user

+ Request (application/json)

    
    + Headers
        
            Authorization: Bearer 77effd7f-f73c-4bb5-a4bf-f3fc8cb5c80d

+ Response 200 (application/json)

            {
                "goodybags" : 
                  [
                    {   "voice_max"       :   250,
                        "text_max"        :   -1,
                        "data_max"        :   -1,
                        "category": ["3g"],
                        "hc_mins": null,
                        "goodybag_name"   :   "BD012",
                        "price"         :   1200,
                    }
                  ]
            }    

## Purchase [/giffgaff-api/bundle]

Purchase a goodybag bundle or airtime credit bundle. You can also set Auto Recurrence and Auto Topup preferences with this endpoint.

### submit an order [POST]

+ Parameters
    + sku ( string ) ... SKU code of the goodybag (e.g: BD001)
    + amount ( string ) ... 0 = if bundle , 1000 = if topup.. (amount in pence)
    + autorecurrence (boolean) ... turn autorecurrence of goodybag on or off (`true` or `false`)
    + from_balance ( boolean ) ... purchase the goodybag from balance (`true`) or saved card (`false`)
    + autotopup (number) ... turn auto topup of airtime balance on or off (`true` or `false`)
    + topupamount (number) ... the autotopup amount (1000 - 3000 in increments of 500)
    + maxnumber (number) ... maximum number of times a month auto topup should occur (1,2 or 3)
    + cvv (string) ... last 3 or 4 digits on back of card
    + model_info (string) ... a string describing the device eg "iPhone6", "GalaxyS4"
    + os_version (string) ... a string describing os version eg "iOS_8.0.1", "Android_4.1.0"
    + unique_id (string) ... a hexadecimal string identifying the device for iOS we will use `identifierForVendor` e.g `CAE2EE2A-DF53-4839-A8A9-762DEFC462DE`


+ Request (application/json)

    
    + Headers
        
            Authorization: Bearer 77effd7f-f73c-4bb5-a4bf-f3fc8cb5c80d

    + Body
    
            {
                "sku"               :   "BD001",
                "amount"            :   0,
                "autorecurrence"    :   true,
                "from_balance"      :   false,
                "autotopup"         :   true,
                "topupamount"       :   0,
                "maxnumber"         :   0,
                "cvv"               :   "123",
                "model_info"      :   "iPhone6",
                "os_version"      :   "iOS_8.0.1",
                "unique_id"       :   "b998b13096bbecae6a3692ba73a5accccd723faf"
            }
+ Response 200 (application/json)

            {
                "order_reference" : 1234
            }    
